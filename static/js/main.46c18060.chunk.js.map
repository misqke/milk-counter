{"version":3,"sources":["components/Header.js","components/Table.js","components/Orderer.js","App.js","index.js"],"names":["Header","props","id","onClick","countClick","onDoubleClick","orderClick","MakeRow","useState","total","FixTotal","multiplier","num","shelfVal","FixShelf","cratesVal","FixCrates","useEffect","Math","floor","className","color","name","class","type","min","inputMode","value","onFocus","onChange","e","target","parseInt","updateShelf","parseFloat","updateCrates","milkArr","Table","map","milk","Row","crates","fixCrates","stacks","fixStacks","order","fixOrder","sizeArr","Orderer","size","App","counting","changeDisplay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46c18060.chunk.js","sourcesContent":["\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <div id='header'>\r\n            <h1 id=\"title\">Milk Counter 9000</h1>\r\n            <div id=\"btn-container\">\r\n                <button onClick={props.countClick}>Counting</button>\r\n                <button onDoubleClick={props.orderClick}>Ordering</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst MakeRow = (props) => {\r\n    const [total, FixTotal] = useState(0);\r\n    const multiplier = props.num;\r\n    const [shelfVal, FixShelf] = useState(0);\r\n    const [cratesVal, FixCrates] = useState(0);\r\n\r\n    const updateTotal = () => {\r\n        if (cratesVal && shelfVal) {\r\n            FixTotal(Math.floor((cratesVal*multiplier) + (shelfVal)));\r\n        } else if (shelfVal) {\r\n            FixTotal(Math.floor(shelfVal));\r\n        } else if (cratesVal) {\r\n            FixTotal(Math.floor(cratesVal*multiplier));\r\n        } else {\r\n            FixTotal(0);\r\n        }\r\n    };\r\n    const updateShelf = (e) => {\r\n        if (e.target.value) {\r\n            FixShelf(parseInt(e.target.value));\r\n        } else {\r\n            FixShelf('');\r\n        } \r\n    }\r\n    const updateCrates = (e) => {\r\n        if (e.target.value) {\r\n            FixCrates(parseFloat(e.target.value));\r\n        } else {\r\n            FixCrates('');\r\n        }\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        updateTotal();\r\n    });\r\n    \r\n\r\n    return (\r\n        <tr key={props.name} className={props.color}>\r\n            <td className=\"milk-name\">{props.name}</td>\r\n            <td><input class='input' type=\"number\" min='0' inputMode='decimal' value={shelfVal} onFocus={ () => FixShelf('')} onChange={ e => {updateShelf(e)}} /></td>\r\n            <td><input class='input' type=\"number\" min='0' inputMode='decimal' value={cratesVal} onFocus={ () => FixCrates('')} onChange={ e => {updateCrates(e)}} /></td>\r\n            <td className=\"total\">{total}</td>\r\n        </tr>\r\n    )\r\n} \r\n\r\nconst milkArr = [['gal homo', 4, 'red'], ['gal 2%', 4, 'blue'], ['gal 1%', 4, 'yellow'], ['gal skim', 4, 'lblue'], ['hgl homo', 9, 'red'], ['hgl 2%', 9, 'blue'], ['hgl 1%', 9, 'yellow'], ['hgl skim', 9, 'lblue'], ['qt homo', 16, 'red'], ['qt 2%', 16, 'blue'], ['qt 1%', 16, 'yellow'], ['qt skim', 16, 'lblue'], ['gal choc', 4, 'brown'], ['gal choc 1%', 4, 'lbrown'], ['hgl choc 1%', 9, 'lbrown'], ['hgl choc', 9, 'brown'], ['hgl butter', 9, 'green'], ['qt butter 1%', 16, 'green'], ['qt choc 1%', 16, 'lbrown'], ['qt choc', 16, 'brown'], ['14oz homo', 20, 'red'], ['14oz 2%', 20, 'blue'], ['14oz choc 1%', 20, 'lbrown'], ['14oz choc', 20, 'brown'], ['qt whp crm', 20, 'tea'], ['lemon tea', 4, 'tea'], ['lemonade', 4, 'tea'], ['green tea', 4, 'tea'], ['tea cooler', 4, 'tea'], ['diet lemon', 4, 'tea'], ['diet peach', 4, 'tea'], ['diet decaf', 4, 'tea'], ['sweet tea', 4, 'tea'], ['diet green', 4, 'tea'], ['peach tea', 4, 'tea'], ['diet sweet', 4, 'tea'], ['rasp lemon', 4, 'tea'], ['rasp tea', 4, 'tea'], ['pt iced', 20, 'tea'], ['pt diet lemon', 20, 'tea'], ['pt peach', 20, 'tea'], ['pt sweet tea', 20, 'tea'], ['gal frt punch', 4, 'red'], ['gal org drink', 4, 'orange'], ['gal orange juice', 4, 'orange'], ['gal cal oj', 4, 'orange'], ['hgl orange juice', 16, 'orange'], ['hgl cal oj', 16, 'orange'], ['pt orange juice', 20, 'orange']];\r\n\r\n\r\nexport default function Table() {\r\n    return (\r\n        <div className=\"table-container\">\r\n            <table>\r\n                <tbody>\r\n                <tr className='t-header'>\r\n                        <th>Milk</th>\r\n                        <th>Shelf</th>\r\n                        <th>Crates</th>\r\n                        <th>Total</th>\r\n                    </tr>\r\n                    {milkArr.map((milk) => MakeRow({'name': milk[0], 'num': milk[1], 'color': milk[2]}))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\n\r\nconst Row = (props) => {\r\n    const [crates, fixCrates] = useState(0);\r\n    const [stacks, fixStacks] = useState(0);\r\n    const [order, fixOrder] = useState(0);\r\n    const multiplier = props.num\r\n    const stackSize = 6;\r\n\r\n    const handleCrates = (e) => {\r\n        if (e.target.value) {\r\n        fixCrates(parseFloat(e.target.value));\r\n        } else {\r\n            fixCrates('');\r\n        }\r\n    }\r\n    const handleStacks = (e) => {\r\n        if (e.target.value) {\r\n        fixStacks(parseFloat(e.target.value));\r\n        } else {\r\n            fixStacks('');\r\n        }\r\n    }\r\n    const handleOrder = () => {\r\n        if (crates && stacks) {\r\n            fixOrder(Math.floor((crates*multiplier) + (stacks*multiplier*stackSize)));\r\n        } else if (crates) {\r\n            fixOrder(Math.floor(crates*multiplier));\r\n        } else if (stacks) {\r\n            fixOrder(Math.floor(stacks*multiplier*stackSize));\r\n        } else {\r\n            fixOrder(0);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        handleOrder();\r\n    });\r\n\r\n\r\n    return (\r\n        <tr className='tea'>\r\n            <td>{props.name}</td>\r\n            <td><input className='input' type=\"number\" min='0' inputMode='decimal' onChange={handleCrates} onFocus={ () => fixCrates('')} value={crates} /></td>\r\n            <td><input className='input' type=\"number\" min='0' inputMode='decimal' onChange={handleStacks} onFocus={ () => fixStacks('')} value={stacks} /></td>\r\n            <td className=\"total\">{order}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst sizeArr = [['gallon', 4], ['half gal', 9], ['quart', 16], ['14oz/pint', 20]];\r\n\r\n\r\nexport default function Orderer() {\r\n    return (\r\n        <div id='orderer-container' className=\"table-container\">\r\n            <table>\r\n                <tr className='t-header'>\r\n                    <th>Size</th>\r\n                    <th>Crates</th>\r\n                    <th>Stacks</th>\r\n                    <th>Order</th>\r\n                </tr>\r\n                {sizeArr.map((size) => Row({'name':size[0], 'num':size[1]}))}\r\n            </table>\r\n            <p>*Stacks are 6 crates</p>\r\n        </div>\r\n    )\r\n}","import Header from './components/Header';\nimport Table from './components/Table';\nimport Orderer from './components/Orderer';\nimport { useState } from 'react';\n\n\n\n\nfunction App() {\n  const [counting, changeDisplay] = useState(true);\n  const changeCounting = () => {\n      changeDisplay(true);  \n  };\n  const changeOrdering = () => {\n      changeDisplay(false);  \n  };\n\n  return (\n    <div className=\"App\">\n      <Header countClick={changeCounting} orderClick={changeOrdering}/>\n      {counting ? <Table />: <Orderer />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}