{"version":3,"sources":["components/Header.js","components/Table.js","App.js","index.js"],"names":["Header","id","MakeRow","props","useState","shelfVal","FixShelf","cratesVal","FixCrates","total","FixTotal","multiplier","num","useEffect","className","color","name","class","type","pattern","value","onFocus","onChange","e","target","parseInt","updateShelf","updateCrates","milkArr","Table","map","milk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c416b65.chunk.js","sourcesContent":["\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div id='header'>\r\n            <h1 id=\"title\">Milk Counter 9000</h1>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst MakeRow = (props) => {\r\n    const [shelfVal, FixShelf] = useState(0);\r\n    const [cratesVal, FixCrates] = useState(0);\r\n    const [total, FixTotal] = useState(0);\r\n    const multiplier = props.num;\r\n\r\n    \r\n\r\n    const updateTotal = () => {\r\n        if (cratesVal && shelfVal) {\r\n            FixTotal((cratesVal*multiplier) + (shelfVal));\r\n        } else if (shelfVal) {\r\n            FixTotal(shelfVal);\r\n        } else if (cratesVal) {\r\n            FixTotal(cratesVal*multiplier);\r\n        } else {\r\n            FixTotal(0);\r\n        }\r\n    }\r\n\r\n    const updateShelf = (e) => {\r\n        if (e.target.value) {\r\n            FixShelf(parseInt(e.target.value));\r\n        } else {\r\n            FixShelf(0);\r\n        } \r\n    }\r\n    const updateCrates = (e) => {\r\n        if (e.target.value) {\r\n            FixCrates(parseInt(e.target.value));\r\n        } else {\r\n            FixCrates(0);\r\n        }\r\n      \r\n    }\r\n    useEffect(() => {\r\n        updateTotal();\r\n    });\r\n\r\n    return (\r\n        <tr key={props.name} className={props.color}>\r\n            <td className=\"milk-name\">{props.name}</td>\r\n            <td><input class='input' type=\"text\" pattern=\"[0-9]*\" value={shelfVal} onFocus={ () => FixShelf('')} onChange={ e => {updateShelf(e)}} /></td>\r\n            <td><input class='input' type=\"text\" pattern=\"[0-9]*\" value={cratesVal} onFocus={ () => FixCrates('')} onChange={ e => {updateCrates(e)}} /></td>\r\n            <td>{total}</td>\r\n        </tr>\r\n    )\r\n} \r\n\r\nconst milkArr = [['gal homo', 4, 'red'], ['gal 2%', 4, 'blue'], ['gal 1%', 4, 'yellow'], ['gal skim', 4, 'lblue'], ['hgl homo', 9, 'red'], ['hgl 2%', 9, 'blue'], ['hgl 1%', 9, 'yellow'], ['hgl skim', 9, 'lblue'], ['qt homo', 16, 'red'], ['qt 2%', 16, 'blue'], ['qt 1%', 16, 'yellow'], ['qt skim', 16, 'lblue'], ['gal choc', 4, 'brown'], ['gal choc 1%', 4, 'lbrown'], ['hgl choc 1%', 9, 'lbrown'], ['hgl choc', 9, 'brown'], ['hgl butter', 9, 'green'], ['qt butter 1%', 16, 'green'], ['qt choc 1%', 16, 'lbrown'], ['qt choc', 16, 'brown'], ['14oz homo', 20, 'red'], ['14oz 2%', 20, 'blue'], ['14oz choc 1%', 20, 'lbrown'], ['14oz choc', 20, 'brown'], ['qt whp crm', 20, 'tea'], ['lemon tea', 4, 'tea'], ['lemonade', 4, 'tea'], ['green tea', 4, 'tea'], ['tea cooler', 4, 'tea'], ['diet lemon', 4, 'tea'], ['diet peach', 4, 'tea'], ['diet decaf', 4, 'tea'], ['sweet tea', 4, 'tea'], ['diet green', 4, 'tea'], ['peach tea', 4, 'tea'], ['diet sweet', 4, 'tea'], ['rasp lemon', 4, 'tea'], ['rasp tea', 4, 'tea'], ['pt iced', 20, 'tea'], ['pt diet lemon', 20, 'tea'], ['pt peach', 20, 'tea'], ['pt sweet tea', 20, 'tea'], ['gal frt punch', 4, 'red'], ['gal org drink', 4, 'orange'], ['gal orange juice', 4, 'orange'], ['gal cal oj', 4, 'orange'], ['hgl orange juice', 16, 'orange'], ['hgl cal oj', 16, 'orange'], ['pt orange juice', 20, 'orange']];\r\n\r\n\r\nexport default function Table() {\r\n    return (\r\n        <div className=\"table-container\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Milk</th>\r\n                        <th>Shelf&nbsp;</th>\r\n                        <th>Crates</th>\r\n                        <th>&nbsp;Total</th>\r\n                    </tr>\r\n                    {milkArr.map((milk) => MakeRow({'name': milk[0], 'num': milk[1], 'color': milk[2]}))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import Header from './components/Header';\nimport Table from './components/Table';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}